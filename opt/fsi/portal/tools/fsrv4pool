#!/bin/sh
#
#   fsrv4pool - find xenserver for pool
#
#   This program is free software; you can redistribute it and/or modify it under the 
#   terms of the GNU General Public License as published by the Free Software Foundation;
#   either version 3 of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#   See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along with this program; 
#   if not, see <http://www.gnu.org/licenses/>.
#
ver="1.0.8 - 9.9.2016"
retc=0
progname=${0##*/}
SOURCE="${BASH_SOURCE[0]}"
DIR="$( dirname "$SOURCE" )"
SCRIPTSTART=$(date +%s.%N)
while [ -h "$SOURCE" ]
do 
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd )"
done

export progdir="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

. $progdir/etc/func.sh

function help() {
   clear
   echo
   tput setaf 2
   echo " Help for $progname - $ver"    
   tput sgr0
   echo
   echo "  find xenserver for pool"
   echo
   tput setaf 3
   echo "  Parameter:"
   tput sgr0
   echo "   -p <pool name>     poolname"
   echo
   tput setaf 3
   echo "  Optional Parameter:"
   tput sgr0
   echo "   -q                 quiet mode"
   echo "   -0/1/2             info/debug/trace mode"
   echo "   -l <logfile>       other logfile"
   echo
   tput setaf 3
   echo "  Return Code:"
   tput sgr0
   echo "    1 = help"
   echo "    2 = no pool "
   echo "    > = different meaning"
   echo
   tput setaf 3
   echo "  Example:"
   tput sgr0
   echo "    $progname -p EDV_620_XA_01"
   echo
}


namepool=""
quietmode=""

while getopts ":p:l:hHq012" optname; do
   #tracemsg "Option $optname has value $OPTARG"
   case "$optname" in
      "H")
         printf '%20s - %s\n' "$progname" "find all xenserver in a pool"
         exit 1
      ;;
      "h")
         help
         exit 1
        ;;
      "q")
         export deb2scr="no"
         quietmode=" -q "
         #debmsg " quiet mode"
        ;;
      "0")
         export deb2scr="yes"
         export debug="info"
         quietmode=" -0 "
         debmsg " info mode"
        ;;
      "1")
         export deb2scr="yes"
         export debug="debug"
         quietmode=" -1 "
         debmsg " debug mode"
        ;;
      "2")
         export deb2scr="yes"
         export debug="trace"
         quietmode=" -2 "
         debmsg " trace mode"
        ;;
      "l")
         export logfile="$OPTARG"
         debmsg " log: $logfile"
        ;;
      "p")
         namepool=$OPTARG
         debmsg " pool: $namepool"
        ;;
      "?")
        errmsg "Unknown option $OPTARG"
        ;;
      ":")
        errmsg "No argument value for option $OPTARG"
        ;;
      *)
      # Should not occur
        errmsg "Unknown error while processing options"
        ;;
   esac
done

if [ -z $namepool ]; then
   help
   exit 2
fi


debmsg "Start $progname - $ver"
tracemsg "  RZ: $rz"

if [ $retc -eq 0 ]; then
   cpcok=0
   infmsg "Search XenServer for pool: $namepool"
   for dirmac in $macdir/* ; do
      mac="${dirmac##*/}"
      mac=$(echo $mac | tr 'A-Z' 'a-z')
      if [[ ! $mac =~ $regex_mac ]]; then
         warnmsg "[$mac] is not a valid MAC / Config directory - ignore"
      else
         pool="none"
         if [ -f "$dirmac/xen6.conf" ]; then
           . "$dirmac/xen6.conf"
         elif [ -f "$dirmac/xen7.conf" ]; then
           . "$dirmac/xen7.conf"
         fi
         
         if [ "$namepool" == "$pool" ]; then
            name=`cat $dirmac/xen6.xml| grep -i "<hostname>"| sed -e 's/\(^.*>\)\(.*\)\(<.*$\)/\2/'`
            if [ "$quietmode" == " -q " ]; then
               echo "$name"
            else
               infmsg " Found: $name"
            fi
            cpcok=$((cpcok+1))
         fi

      fi
   done
fi

if [ $retc -eq 0 ]; then
   if [ "$quietmode" != " -q " ]; then
      infmsg "XenSrv found: $cpcok"
   fi
fi

SCRIPTEND=$(date +%s.%N)
runningtime=$(echo "$SCRIPTEND - $SCRIPTSTART" | bc)
debmsg "End $progname rc=$retc run=$runningtime"
exit $retc
