#!/bin/sh
#
#   dellog - delete all logs for server
#
#   This program is free software; you can redistribute it and/or modify it under the 
#   terms of the GNU General Public License as published by the Free Software Foundation;
#   either version 3 of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#   See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along with this program; 
#   if not, see <http://www.gnu.org/licenses/>.
#
ver="1.1.00 - 24.4.2015"
retc=0
progname=${0##*/}
SOURCE="${BASH_SOURCE[0]}"
DIR="$( dirname "$SOURCE" )"
SCRIPTSTART=$(date +%s.%N)
while [ -h "$SOURCE" ]
do 
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd )"
done

export progdir="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

. $progdir/etc/func.sh

function help() {
   clear
   echo
   tput setaf 2
   echo " Help for $progname - $ver"    
   tput sgr0
   echo
   echo "  delete all logs for server"
   echo
   tput setaf 3
   echo "  Parameter:"
   tput sgr0
   echo "   -s <server name>   server to delete logfiles"
   echo
   tput setaf 3
   echo "  Optional Parameter:"
   tput sgr0
   echo "   -q                 quiet mode"
   echo "   -0/1/2             info/debug/trace mode"
   echo "   -l <logfile>       other logfile"
   echo
   tput setaf 3
   echo "  Return Code:"
   tput sgr0
   echo "    1 = help"
   echo "    2 = no server given "
   echo "    > = different meaning"
   echo
   tput setaf 3
   echo "  Example:"
   tput sgr0
   echo "    $progname -p test05"
   echo
}


server=""

while getopts ":s:l:hH012q" optname; do
   #tracemsg "Option $optname has value $OPTARG"
   case "$optname" in
      "H")
         printf '%20s - %s\n' "$progname" "delete all logs for a server"
         exit 1
      ;;
      "h")
         help
         exit 1
        ;;
      "q")
         export deb2scr="no"
         quietmode=" -q "
         #debmsg " quiet mode"
        ;;
      "0")
         export deb2scr="yes"
         export debug="info"
         quietmode=" -0 "
         debmsg " info mode"
        ;;
      "1")
         export deb2scr="yes"
         export debug="debug"
         quietmode=" -1 "
         debmsg " debug mode"
        ;;
      "2")
         export deb2scr="yes"
         export debug="trace"
         quietmode=" -2 "
         debmsg " trace mode"
        ;;
      "l")
         export logfile="$OPTARG"
         debmsg " log: $logfile"
        ;;
      "s")
         server=$OPTARG
         debmsg " server: $server"
        ;;
      "?")
        errmsg "Unknown option $OPTARG"
        ;;
      ":")
        errmsg "No argument value for option $OPTARG"
        ;;
      *)
      # Should not occur
        errmsg "Unknown error while processing options"
        ;;
   esac
done

if [ -z $server ]; then
   help
   exit 2
fi

debmsg "Start $progname - $ver"

found=0

get_srv_data $server
retc=$?
if [ $retc -ne 0 ]; then
   warnmsg "$ls cannot find server data for $server - abort"
else
   tracemsg "$ls  inst base dir: $instdir"
   tracemsg "$ls  srv tree: $srv_tree"
   pfad="$instdir/$srv_tree/ks/log/"
   case "$srv_typ" in
      "xen")
         log2del=(
            ${srv_shortname}.log
            ${srv_shortname}-messages.log
            ${srv_shortname}-xensource.log
         )
       ;;
      "esxi")
         log2del=(
            ${srv_shortname}.log
         )
       ;;
      "rh")
         log2del=(
            ${srv_shortname}.log
         )
       ;;
      "co")
         log2del=(
            ${srv_shortname}.log
         )
       ;;
      *)
         errmsg "Unknown error server type [$servertyp] found - only esxi/xen/co possible"
         exit 2
        ;;
   esac   

   for ((i=0; i<${#log2del[*]}; i++)); do
      if [ -f "$pfad/${log2del[$i]}" ]; then
         cmd="rm -f $pfad/${log2del[$i]}"
         tracemsg "$ls  cmd: $cmd"
         
         OUTPUT=$(2>&1 $cmd)
         rc=$?
         if [ $rc -eq 0 ]; then
            infmsg "$ls  delete $pfad/${log2del[$i]} ok"
         else
            errmsg "cannot delete logfile ${log2del[$i]} in $pfad"
            errmsg "$OUTPUT"
            break
         fi
      fi
   done
fi
      
SCRIPTEND=$(date +%s.%N)
runningtime=$(echo "$SCRIPTEND - $SCRIPTSTART" | bc)
debmsg "End $progname rc=$retc run=$runningtime"
exit $retc
